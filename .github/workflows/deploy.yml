name: Deploy to ECS
on:
  workflow_run:
    workflows: ["Build1"]
    types:
      - completed

env:
  AWS_REGION: us-east-2
  ECR_REGISTRY: 289349975759.dkr.ecr.us-east-2.amazonaws.com
  IMAGE_NAME: sample-python_main
  ECS_CLUSTER_NAME: sample-ecs
  SERVICE_NAME: my-python
  TASK_DEFINITION_NAME: sample-python

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}       
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1    
        
      - name: Pull image from ECR
        run: docker pull $ECR_REGISTRY/$IMAGE_NAME:latest
      - name: Create task definition
        id: create_task_definition
        run: |
          aws ecs register-task-definition --cli-input-json file://task-def.json
      - name: Update service
        id: update_service
        run: |
          #aws ecs create-service --cli-input-json file://service.json
          LATEST_TASK_DEFINITION_ARN=$(aws ecs list-task-definitions --family $TASK_DEFINITION_NAME --sort DESC | jq -r '.taskDefinitionArns[0]')
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $SERVICE_NAME --task-definition $LATEST_TASK_DEFINITION_ARN
      - name: Deregister old task definition revisions
        run: |
          # Retrieve the current task definition revision
          CURRENT_TASK_DEFINITION_ARN=$(aws ecs describe-services --cluster $ECS_CLUSTER_NAME --services $SERVICE_NAME | jq -r '.services[0].taskDefinition')
          # List all task definition revisions for the family
          TASK_DEFINITION_ARNS=$(aws ecs list-task-definitions --family $TASK_DEFINITION_NAME | jq -r '.taskDefinitionArns[]')
          # Loop through each task definition revision
          for TASK_DEFINITION_ARN in $TASK_DEFINITION_ARNS; do
              if [ "$TASK_DEFINITION_ARN" != "$CURRENT_TASK_DEFINITION_ARN" ]; then
                  # De-register the task definition revision
                  aws ecs deregister-task-definition --task-definition $TASK_DEFINITION_ARN
              fi
          done          
      - name: Wait for service deployment
        run: |
          aws ecs wait services-stable --cluster $ECS_CLUSTER_NAME --services $SERVICE_NAME
          # Wait for the service to reach a steady state before continuing
